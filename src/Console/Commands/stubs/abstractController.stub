<?php

namespace DummyNamespace;

use DummyHandlerInterface;
use Illuminate\Http\JsonResponse;
use App\Models\DummyModel;
use Illuminate\Auth\Access\AuthorizationException;
use Illuminate\Contracts\Container\BindingResolutionException;

/**
 * Class DummyClass
 *
 * @category DummyCategory
 * @package  DummyPackage
 * @author   DummyAuthor
 * @license  DummyLicence
 * @link     DummyLink
 */
DummyTypeclass DummyClass extends DummyExtends
{
    /**
     * @OA\Get(
     *  path="DummyPathRoute/DummyPluralModel",
     *  description="",
     *  tags={"DummyUcfirstPluralModel"},
     *  @OA\Response(
     *     response=200,
     *     description="",
     *     @OA\JsonContent(
     *         type="object",
     *         ref="#/components/schemas/DummyModelTransformer"
     *     )
     *  )
     * )
     */
    /**
     * @param DummyModelHandlerInterface $dummyModelHandler
     *
     * @return array
     * @throws BindingResolutionException
     * @throws AuthorizationException
     */
    public function index(DummyModelHandlerInterface $dummyModelHandler): array
    {
        $this->authorize('viewAny', DummyModel::class);

        return $dummyModelHandler->list();
    }


    /**
     * @OA\Post(
     *  path="DummyPathRoute/DummyPluralModel",
     *  description="",
     *  tags={"DummyUcfirstPluralModel"},
     *  @OA\RequestBody(
     *      @OA\JsonContent(
     *         type="object",
     *         ref="#/components/schemas/DummyModelRequest"
     *     )
     *  ),
     *  @OA\Response(
     *     response=200,
     *     description="",
     *     @OA\JsonContent(
     *          type="object",
     *          ref="#/components/schemas/DummyModelTransformer"
     *     )
     *  )
     * )
     */
    /**
     * @param DummyModelHandlerInterface $dummyModelHandler
     *
     * @return array
     * @throws AuthorizationException
     */
    public function store(DummyModelHandlerInterface $dummyModelHandler): array
    {
        $this->authorize('create', DummyModel::class);

        return $dummyModelHandler->handle();
    }


    /**
     * @OA\Get(
     *  path="DummyPathRoute/DummyPluralModel/{dummyModelId}",
     *  description="",
     *  tags={"DummyUcfirstPluralModel"},
     *  @OA\Response(
     *     response=200,
     *     description="",
     *     @OA\JsonContent(
     *         type="object",
     *         ref="#/components/schemas/DummyModelTransformer"
     *     )
     *  )
     * )
     */
    /**
     * @param int                        $dummyModel
     * @param DummyModelHandlerInterface $dummyModelHandler
     *
     * @return array
     * @throws BindingResolutionException
     * @throws AuthorizationException
     */
    public function show(int $dummyModel, DummyModelHandlerInterface $dummyModelHandler): array
    {
        $this->authorize('view', $this->findDummyModel($dummyModel));

        return $dummyModelHandler->get($dummyModel);
    }


    /**
     * @OA\Put(
     *  path="DummyPathRoute/DummyPluralModel/{dummyModelId}",
     *  description="",
     *  tags={"DummyUcfirstPluralModel"},
     *  @OA\RequestBody(
     *      @OA\JsonContent(
     *         type="object",
     *         ref="#/components/schemas/DummyModelRequest"
     *     )
     *  ),
     *  @OA\Response(
     *     response=200,
     *     description="",
     *     @OA\JsonContent(
     *          type="object",
     *          ref="#/components/schemas/DummyModelTransformer"
     *     )
     *  )
     * )
     */
    /**
     * @param int                        $dummyModel
     * @param DummyModelHandlerInterface $dummyModelHandler
     *
     * @return array
     * @throws AuthorizationException
     */
    public function update(int $dummyModel, DummyModelHandlerInterface $dummyModelHandler): array
    {
        $this->authorize('update', $this->findDummyModel($dummyModel));

        return $dummyModelHandler->handle(['id' => $dummyModel]);
    }


    /**
     * @OA\Delete(
     *  path="DummyPathRoute/DummyPluralModel/{dummyModelId}",
     *  description="",
     *  tags={"DummyUcfirstPluralModel"},
     *  @OA\Response(
     *     response=200,
     *     description="",
     *  )
     * )
     */
    /**
     * @param int                        $dummyModel
     * @param DummyModelHandlerInterface $dummyModelHandler
     *
     * @return JsonResponse
     * @throws BindingResolutionException
     * @throws AuthorizationException
     */
    public function destroy(int $dummyModel, DummyModelHandlerInterface $dummyModelHandler): JsonResponse
    {
        $this->authorize('delete', $this->findDummyModel($dummyModel));

        return response()->json(
            [
                'message' => $dummyModelHandler->destroy($dummyModel)
            ]
        );
    }

    /**
     * @param int $id
     * @return Leave
     */
    public function findDummyModel(int $id): DummyModel
    {
        return DummyModel::find($id);
    }
}
